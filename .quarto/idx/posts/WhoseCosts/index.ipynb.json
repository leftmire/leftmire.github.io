{"title":"Whose Costs?","markdown":{"yaml":{"title":"Whose Costs?","author":"Liz Rightmire","date":"2024-03-1","image":"image.jpg","description":"Designing and Evaluating a Profit-Maximizing Loan Default Predictor Model","format":"html"},"headingText":"Whose Costs?","containsRefs":false,"markdown":"\n\n\n### Introduction\n\nThis blog tackles a real world problem: given  information on an individual and their specific loan request, should a bank offer this person a loan? I will conduct an exploration of the data to determine which features in the dataset are the best predictors of a person's loan status (whether they will default on their loan, or not). Using logistic regression, I will determine a weight vector to use in a linear score function. Then, with the only goal of maximizing profit, I will choose a threshold value: individuals with scores below this value will be offered a loan by the mythical Liz Bank, and those with scores above this value will be denied. However, a model created with the sole goal of maximizing profit is bound to make harsh judgements and marginialize groups. At the end of this post, I'll evaluate to what extent this is true.\n\nFirst, let's grab the data. Our dataset has 12 features and 22,907 entries. Our predictor variable is `loan_status`: a 1 indicates that this person defaulted on the loan and the bank lost money (bad!), and a 0 means they didn't default.\n\n### Explore Data\n\n\nLet's make a summary table and 2 visualizations to explore our data. In this process, we want to begin to determine which features may be good predictors of loan status. \n\nFirst, let's look at the mean loan amount for different home ownership statuses. Unsurprisingly, people with mortgages had a high mean loan amount of ~10,600. This makes sense, as their loan may be the mortgage itself, or these individuals' lack of disposable income may lead them to take loans for other purposes as well. People who rent and own houses had lower mean loan amounts around $8,000 - $9,000.\n\nNext, I made a scatterplot illustrating loan status depending on loan interest rate and loan amount. From the graph, I was able to infer a decision boundary for loan interest rate: >12.5% and people tend to default on their loans, <12.5% and people tend not to. Curiously, it was challenging to see a pattern when considering loan amount.\n\nFinally, these histograms helped me understand how purpose of loans change with age. Unsurprisingly, people in their twenties tend to take out loans for education, with people in their late twenties making venture loans to start businesses. With age, loans transition for medical and personal purposes.\n\n### Build a Model\n\nNow it's time to build a model. First, one-hot-encode the qualitative columns in the training set and drop features not permitted in the mdoel (loan status -- the predictor, and loan grade)\n\nWhat number of features, and which ones, are most effective in a model to predict loan status? To answer this question, I turned to logistic regression. Utilizing the combinations function from itertools, I fit a logistic regression model with 5 cross-validation batches for each combination of features. I began with `NUMFEATURES = 2` to test couples of features and found that `person_home_ownership` and `loan_percent_income` produced the highest score of 0.849. Adjusting `NUMFEATURES` to 3 and 4 produced highest scores of 0.484, so I deduced that those two features to be the simplest and most effecetive. \n\nFrom the `LogisticRegression.coef_` features, I was able to find the weights to use in my score function.\n\n### Find a Threshold\n\nExtract the two desired features for the `X_train`dataset, and set the `y_train` dataset to be the predictor variable -- `loan_status`\n\nBefore we continue with making our model, let's quickly check if it makes sense that these two variables are effective in modeling loan status. It turns out that yes, we see clear differences in `loan_percent_income` in the different `person_home_ownership` groups for those who did and didn't default on their loans.\n\nThe linear score for each entry of `X_train` is just `X_train` @ `weights`, where @ represents matrix multiplication.\n\nLet's take a look at the scores we produced. All scores are between -3 and 5, with most being around 0. The distribution of scores roughly takes the form of a bell curve.\n\nWhat should the threshold be to maximize profit? To answer this question, I chose to copy `df_train` into `df_profit`. This way, I could add a column `y_pred`, which is `False` if the person's score is less than the threshold and `True` if it is greater than or equal to the threshold. With a for loop, different values of threshold `t` can be considered. Another column, outcome, labels entries as true negatives, false negatives, false positives, and true positives. That way, each person's profit contribution to the bank can be stored in a final column: `profit`. True positives and false positives don't contribute any profit (neither positive nor negative) because they won't be offered a loan in the first place -- these people are expected to default. To find the average profit per loan, divide by the combined number of false negatives and true negatives\n\nPlotting the average profit per loan results for each threshold value shows a maximum when threshold = -2. The expected profit per loan is around $110 at this value. \n\n### Evalute your Model from the Bank's Perspective\n\nLet's run our model on the test set, with a threshold value of -2.\n\nThe expected profit per borrower is ~$140. This is $30 larger, or 27% larger, than the average profit per loan on the test set.\n\n### Evaluate model from Borrower's Perspective\n\nOur model produces great profits for the bank. But how does it function from the borrower's perspective?\n\nThe following table shows one thing very clearly: this model does NOT grant loans to many individuals. In order to maximize the profit per loan, the model only predicts people to not default if they have a score <-2. Considering the histogram of scores from earlier, we know that a very small subset of people in our training set had scores <-2. In our test set, that's only 174 people out of the total 5731. \n\nLet's consider: is it more difficult for people in certain age groups to access credit? The following histogram indicates that no, our model accepts people from different age groups at equal rates.\n\nHowever, considering the following table, there are unfair trends. People 50+ are predicted to default 100% of the time and are consequently offered no loans by our model. It is easiest for people aged 40-50 to receive a loan; although they are expected to default 95.45% of the time, this is the lowest percentage of any age group.\n\nNow to consider: is it more difficult for people to get loans in order to pay for medical expenses? Medical loans are the 2nd most challenging to secure with our model, after Debt Consolidation.\n\nWhen compared to the actual rate of default, people in the test set defaulted on debt consolidation loans 28.76% of the time, and defaulted on medical loans 28.43% of the time.\n\nFinally, I am curious how a person's income level impacts the ease with which they can access credit under my decision system. To answer this question, I made the following table which shows the percentages of people in each income group who would be granted a loan by my algorithm. Unfortunately, only 2.38% of people making <$50,000 would be offered a loan by my model, whereas people making $150,000 - 200,000 would be offered a loan 5.13% of the time. People making $200,000+ would be granted loans at a much higher rate: 9.19%.\n\n### Conclusion\n\nIn this exercise, I blindly set out with one goal: maximizing profit. I intentionally put my opinions aside to determine what the outcome would be if I truly just tried to make a model that makes the most money for a bank. Consequently, I used the \"best\" features for modeling loan status and set a very low threshold value that offered loans to very very few people -- only ones rated very low chance of default. These people, unsurprisingly, tended to have high income, be in their 30s and 40s, and be requesting loans for venture use. \n\nOk, so I've made this brutal algorithm, now I can finally bring my brain back into the equation and think about what I've done. The people the mythical Liz Bank is offering loans to... don't NEED the loans as badly as the others. They're already rich! This hardly feels fair -- people who have more money to begin with can get loans for more money, while others can't?\n\nNow I need to describe how I like to consider fairness. I like thinking about it in terms of equality vs. equity. In an equal world, everyone is treated the same no matter their circumstances. In an equitable world, people with less advantages are given a \"boost\" so that people have near equal opportunities. I think that a fair world is an equitable world, but not necessarily an equal world.\n\n![citation:https://mostly.ai/blog/we-want-fair-ai-algorithms-but-how-to-define-fairness](fairness.jpg){width=50%}\n\nThis was a valable exercise. My mom works on a loan committee at a small local bank, and now I am curious how she and her colleagues determine who to grant loans to in our community. I am excited to ask her more about this, any models they use in their decisions, and maybe offer her some new perspective on the issue. This exercise reminded me of the importance of staying connected to the problem I'm solving with ML: things get dicey when there's only one goal in mind (e.g: maximize profit!)\n","srcMarkdownNoYaml":"\n\n# Whose Costs?\n\n### Introduction\n\nThis blog tackles a real world problem: given  information on an individual and their specific loan request, should a bank offer this person a loan? I will conduct an exploration of the data to determine which features in the dataset are the best predictors of a person's loan status (whether they will default on their loan, or not). Using logistic regression, I will determine a weight vector to use in a linear score function. Then, with the only goal of maximizing profit, I will choose a threshold value: individuals with scores below this value will be offered a loan by the mythical Liz Bank, and those with scores above this value will be denied. However, a model created with the sole goal of maximizing profit is bound to make harsh judgements and marginialize groups. At the end of this post, I'll evaluate to what extent this is true.\n\nFirst, let's grab the data. Our dataset has 12 features and 22,907 entries. Our predictor variable is `loan_status`: a 1 indicates that this person defaulted on the loan and the bank lost money (bad!), and a 0 means they didn't default.\n\n### Explore Data\n\n\nLet's make a summary table and 2 visualizations to explore our data. In this process, we want to begin to determine which features may be good predictors of loan status. \n\nFirst, let's look at the mean loan amount for different home ownership statuses. Unsurprisingly, people with mortgages had a high mean loan amount of ~10,600. This makes sense, as their loan may be the mortgage itself, or these individuals' lack of disposable income may lead them to take loans for other purposes as well. People who rent and own houses had lower mean loan amounts around $8,000 - $9,000.\n\nNext, I made a scatterplot illustrating loan status depending on loan interest rate and loan amount. From the graph, I was able to infer a decision boundary for loan interest rate: >12.5% and people tend to default on their loans, <12.5% and people tend not to. Curiously, it was challenging to see a pattern when considering loan amount.\n\nFinally, these histograms helped me understand how purpose of loans change with age. Unsurprisingly, people in their twenties tend to take out loans for education, with people in their late twenties making venture loans to start businesses. With age, loans transition for medical and personal purposes.\n\n### Build a Model\n\nNow it's time to build a model. First, one-hot-encode the qualitative columns in the training set and drop features not permitted in the mdoel (loan status -- the predictor, and loan grade)\n\nWhat number of features, and which ones, are most effective in a model to predict loan status? To answer this question, I turned to logistic regression. Utilizing the combinations function from itertools, I fit a logistic regression model with 5 cross-validation batches for each combination of features. I began with `NUMFEATURES = 2` to test couples of features and found that `person_home_ownership` and `loan_percent_income` produced the highest score of 0.849. Adjusting `NUMFEATURES` to 3 and 4 produced highest scores of 0.484, so I deduced that those two features to be the simplest and most effecetive. \n\nFrom the `LogisticRegression.coef_` features, I was able to find the weights to use in my score function.\n\n### Find a Threshold\n\nExtract the two desired features for the `X_train`dataset, and set the `y_train` dataset to be the predictor variable -- `loan_status`\n\nBefore we continue with making our model, let's quickly check if it makes sense that these two variables are effective in modeling loan status. It turns out that yes, we see clear differences in `loan_percent_income` in the different `person_home_ownership` groups for those who did and didn't default on their loans.\n\nThe linear score for each entry of `X_train` is just `X_train` @ `weights`, where @ represents matrix multiplication.\n\nLet's take a look at the scores we produced. All scores are between -3 and 5, with most being around 0. The distribution of scores roughly takes the form of a bell curve.\n\nWhat should the threshold be to maximize profit? To answer this question, I chose to copy `df_train` into `df_profit`. This way, I could add a column `y_pred`, which is `False` if the person's score is less than the threshold and `True` if it is greater than or equal to the threshold. With a for loop, different values of threshold `t` can be considered. Another column, outcome, labels entries as true negatives, false negatives, false positives, and true positives. That way, each person's profit contribution to the bank can be stored in a final column: `profit`. True positives and false positives don't contribute any profit (neither positive nor negative) because they won't be offered a loan in the first place -- these people are expected to default. To find the average profit per loan, divide by the combined number of false negatives and true negatives\n\nPlotting the average profit per loan results for each threshold value shows a maximum when threshold = -2. The expected profit per loan is around $110 at this value. \n\n### Evalute your Model from the Bank's Perspective\n\nLet's run our model on the test set, with a threshold value of -2.\n\nThe expected profit per borrower is ~$140. This is $30 larger, or 27% larger, than the average profit per loan on the test set.\n\n### Evaluate model from Borrower's Perspective\n\nOur model produces great profits for the bank. But how does it function from the borrower's perspective?\n\nThe following table shows one thing very clearly: this model does NOT grant loans to many individuals. In order to maximize the profit per loan, the model only predicts people to not default if they have a score <-2. Considering the histogram of scores from earlier, we know that a very small subset of people in our training set had scores <-2. In our test set, that's only 174 people out of the total 5731. \n\nLet's consider: is it more difficult for people in certain age groups to access credit? The following histogram indicates that no, our model accepts people from different age groups at equal rates.\n\nHowever, considering the following table, there are unfair trends. People 50+ are predicted to default 100% of the time and are consequently offered no loans by our model. It is easiest for people aged 40-50 to receive a loan; although they are expected to default 95.45% of the time, this is the lowest percentage of any age group.\n\nNow to consider: is it more difficult for people to get loans in order to pay for medical expenses? Medical loans are the 2nd most challenging to secure with our model, after Debt Consolidation.\n\nWhen compared to the actual rate of default, people in the test set defaulted on debt consolidation loans 28.76% of the time, and defaulted on medical loans 28.43% of the time.\n\nFinally, I am curious how a person's income level impacts the ease with which they can access credit under my decision system. To answer this question, I made the following table which shows the percentages of people in each income group who would be granted a loan by my algorithm. Unfortunately, only 2.38% of people making <$50,000 would be offered a loan by my model, whereas people making $150,000 - 200,000 would be offered a loan 5.13% of the time. People making $200,000+ would be granted loans at a much higher rate: 9.19%.\n\n### Conclusion\n\nIn this exercise, I blindly set out with one goal: maximizing profit. I intentionally put my opinions aside to determine what the outcome would be if I truly just tried to make a model that makes the most money for a bank. Consequently, I used the \"best\" features for modeling loan status and set a very low threshold value that offered loans to very very few people -- only ones rated very low chance of default. These people, unsurprisingly, tended to have high income, be in their 30s and 40s, and be requesting loans for venture use. \n\nOk, so I've made this brutal algorithm, now I can finally bring my brain back into the equation and think about what I've done. The people the mythical Liz Bank is offering loans to... don't NEED the loans as badly as the others. They're already rich! This hardly feels fair -- people who have more money to begin with can get loans for more money, while others can't?\n\nNow I need to describe how I like to consider fairness. I like thinking about it in terms of equality vs. equity. In an equal world, everyone is treated the same no matter their circumstances. In an equitable world, people with less advantages are given a \"boost\" so that people have near equal opportunities. I think that a fair world is an equitable world, but not necessarily an equal world.\n\n![citation:https://mostly.ai/blog/we-want-fair-ai-algorithms-but-how-to-define-fairness](fairness.jpg){width=50%}\n\nThis was a valable exercise. My mom works on a loan committee at a small local bank, and now I am curious how she and her colleagues determine who to grant loans to in our community. I am excited to ask her more about this, any models they use in their decisions, and maybe offer her some new perspective on the issue. This exercise reminded me of the importance of staying connected to the problem I'm solving with ML: things get dicey when there's only one goal in mind (e.g: maximize profit!)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","title-block-banner":"../../img/landscape.png","title-block-banner-color":"white","theme":"cosmo","title":"Whose Costs?","author":"Liz Rightmire","date":"2024-03-1","image":"image.jpg","description":"Designing and Evaluating a Profit-Maximizing Loan Default Predictor Model"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}